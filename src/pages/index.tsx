import { useEffect } from "react";
import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";
import SignIn from "./signIn";

import { api } from "~/utils/api";
import { createId } from "@paralleldrive/cuid2";
import { create } from "domain";

type formIdNameModel = {
  formId: string;
  name: string;
  formObject: any;
};

export default function Home() {
  const { data: sessionData } = useSession();

  const hello = api.form.getUsersForms.useQuery({
    userId: sessionData?.user.id!,
  });
  var arrayOfFormId: string[] = [];
  var arrayOfFormIdName: formIdNameModel[] = [];
  function countUnique() {
    hello.data?.forEach((form) => {
      if (!arrayOfFormId.includes(form.formId)) {
        arrayOfFormId.push(form.formId);

        arrayOfFormIdName.push({
          formId: form.formId,
          name: form.name,
          formObject: form.formObject,
        });
      }
    });
  }
  countUnique();

  if (sessionData == null) {
    return <SignIn />;
  }
  const profileImage = sessionData.user.image!;
  return (
    <>
      <Head>
        <title>Home</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col bg-gray-100 font-sans">
        <div className="flex w-full bg-gray-200 py-3">
          <div className="flex w-1/2 items-center justify-start">
            <button
              onClick={() => {
                signOut();
              }}
              className="mx-3 h-10 rounded-lg bg-red-500 px-2 py-1 font-serif text-white"
            >
              Sign Out
            </button>
            <img
              src={profileImage}
              className="h-14 w-14 rounded-full"
              alt="Profile Picture"
            />
          </div>
          <div className="flex w-1/2 items-center justify-end">
            <a
              href={`/form/${createId()}`}
              className="mx-3 h-10 rounded-lg bg-blue-600 px-2 py-1 text-white"
            >
              Add New Form
            </a>
          </div>
        </div>
        <div className="mx-24 mt-3 border-b text-2xl font-bold">Forms</div>
        <div className="mt-5 flex gap-10 px-24">
          {arrayOfFormIdName.map((form) => (
            <a
              className=" flex h-64 w-44 flex-col items-center   rounded-lg bg-gray-300 text-center text-2xl text-white shadow-md  duration-200 hover:scale-105"
              href={`/form/${form.formId}`}
            >
              <div className=" h-48 w-full rounded-t-lg bg-white ">
                <div className="mx-2 mt-4 flex flex-col rounded-lg bg-gray-300 px-3">
                  <p className="h-6 border-b border-gray-500 pl-2 text-start text-[8px] text-black">
                    {form.name}
                  </p>
                  <p className="flex h-4 flex-col justify-start border-b border-gray-500 bg-blue-300 pb-10 text-[6px]">
                    {sessionData.user.email}
                  </p>
                </div>
              </div>
              {form.name}
            </a>
          ))}
        </div>
      </main>
    </>
  );
}

// function AuthShowcase() {
//   const { data: sessionData } = useSession();

//   const { data: secretMessage } = api.post.getSecretMessage.useQuery(
//     undefined, // no input
//     { enabled: sessionData?.user !== undefined },
//   );

//   return (
//     <div className="flex flex-col items-center justify-center gap-4">
//       <p className="text-center text-2xl text-white">
//         {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
//         {secretMessage && <span> - {secretMessage}</span>}
//       </p>
//       <button
//         className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
//         onClick={sessionData ? () => void signOut() : () => void signIn()}
//       >
//         {sessionData ? "Sign out" : "Sign in"}
//       </button>
//     </div>
//   );
// }
